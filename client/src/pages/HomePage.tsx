import React from 'react';
import {
  Box,
  Container,
  Typography,
  Button,
  Card,
  CardContent,
  CardActions,
  Paper,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  useTheme,
  useMediaQuery,
} from '@mui/material';
import {
  Calculate,
  ViewModule,
  EmojiEvents,
  Speed,
  Psychology,
  TrendingUp,
  CheckCircle,
} from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';

const HomePage: React.FC = () => {
  const navigate = useNavigate();
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const { isAuthenticated } = useAuth();

  const features = [
    {
      icon: <Calculate color="primary" sx={{ fontSize: 40 }} />,
      title: '–ß–∏—Å–ª–æ–≤–æ–π —Ç—Ä–µ–Ω–∞–∂—ë—Ä',
      description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤ —É—Å—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é',
    },
    {
      icon: <ViewModule color="primary" sx={{ fontSize: 40 }} />,
      title: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞–±–∞–∫—É—Å',
      description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å—á—ë—Ç—ã (—Å–æ—Ä–æ–±–∞–Ω) –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏',
    },
    {
      icon: <EmojiEvents color="primary" sx={{ fontSize: 40 }} />,
      title: '–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
      description: '–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –æ–±—É—á–µ–Ω–∏—é',
    },
    {
      icon: <Speed color="primary" sx={{ fontSize: 40 }} />,
      title: '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏–π –ø–æ –º–µ—Ä–µ —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤',
    },
    {
      icon: <Psychology color="primary" sx={{ fontSize: 40 }} />,
      title: '–†–∞–∑–≤–∏—Ç–∏–µ –ø–∞–º—è—Ç–∏',
      description: '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –≤–Ω–∏–º–∞–Ω–∏—è –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏',
    },
    {
      icon: <TrendingUp color="primary" sx={{ fontSize: 40 }} />,
      title: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
      description: '–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
    },
  ];

  const benefits = [
    '–ë—ã—Å—Ç—Ä—ã–π —É—Å—Ç–Ω—ã–π —Å—á—ë—Ç –±–µ–∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞',
    '–£–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –≤–Ω–∏–º–∞–Ω–∏—è',
    '–†–∞–∑–≤–∏—Ç–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏',
    '–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ',
    '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ',
    '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ —ç–∫–∑–∞–º–µ–Ω–∞–º',
  ];

  const handleGetStarted = () => {
    if (isAuthenticated) {
      navigate('/dashboard');
    } else {
      navigate('/register');
    }
  };

  return (
    <Box>
      {/* –ì–ª–∞–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä */}
      <Box
        sx={{
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          color: 'white',
          py: { xs: 6, md: 10 },
          textAlign: 'center',
        }}
      >
        <Container maxWidth="md">
          <Typography
            variant="h2"
            component="h1"
            gutterBottom
            sx={{
              fontSize: { xs: '2rem', md: '3.5rem' },
              fontWeight: 700,
              mb: 3,
            }}
          >
            üßÆ –¢—Ä–µ–Ω–∞–∂—ë—Ä –ú–µ–Ω—Ç–∞–ª—å–Ω–æ–π –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏
          </Typography>
          <Typography
            variant="h5"
            component="p"
            sx={{
              fontSize: { xs: '1.1rem', md: '1.5rem' },
              mb: 4,
              opacity: 0.9,
            }}
          >
            –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —É—Å—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞ –∏ —É–ª—É—á—à–∞–π—Ç–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –≤–Ω–∏–º–∞–Ω–∏—è
            —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞–±–∞–∫—É—Å–∞
          </Typography>
          <Button
            variant="contained"
            size="large"
            onClick={handleGetStarted}
            sx={{
              fontSize: '1.2rem',
              py: 2,
              px: 4,
              backgroundColor: 'rgba(255,255,255,0.2)',
              backdropFilter: 'blur(10px)',
              border: '1px solid rgba(255,255,255,0.3)',
              '&:hover': {
                backgroundColor: 'rgba(255,255,255,0.3)',
              },
            }}
          >
            {isAuthenticated ? '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º' : '–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ'}
          </Button>
        </Container>
      </Box>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <Box sx={{ py: 8, backgroundColor: 'background.paper' }}>
        <Container maxWidth="lg">
          <Typography
            variant="h3"
            component="h2"
            align="center"
            gutterBottom
            sx={{ mb: 6, fontWeight: 600 }}
          >
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
          </Typography>
          
          <Box 
            sx={{
              display: 'grid',
              gridTemplateColumns: {
                xs: '1fr',
                md: 'repeat(2, 1fr)',
                lg: 'repeat(3, 1fr)'
              },
              gap: 4
            }}
          >
            {features.map((feature, index) => (
              <Box key={index}>
                <Card
                  sx={{
                    height: '100%',
                    transition: 'transform 0.3s ease-in-out',
                    '&:hover': {
                      transform: 'translateY(-8px)',
                    },
                  }}
                >
                  <CardContent sx={{ textAlign: 'center', p: 3 }}>
                    <Box sx={{ mb: 2 }}>
                      {feature.icon}
                    </Box>
                    <Typography variant="h6" component="h3" gutterBottom>
                      {feature.title}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      {feature.description}
                    </Typography>
                  </CardContent>
                </Card>
              </Box>
            ))}
          </Box>
        </Container>
      </Box>

      {/* –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ */}
      <Box sx={{ py: 8, backgroundColor: 'grey.50' }}>
        <Container maxWidth="md">
          <Typography
            variant="h3"
            component="h2"
            align="center"
            gutterBottom
            sx={{ mb: 6, fontWeight: 600 }}
          >
            –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ?
          </Typography>
          
          <Paper sx={{ p: 4, borderRadius: 3 }}>
            <List>
              {benefits.map((benefit, index) => (
                <ListItem key={index} sx={{ py: 1 }}>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary={benefit}
                    primaryTypographyProps={{
                      fontSize: '1.1rem',
                    }}
                  />
                </ListItem>
              ))}
            </List>
          </Paper>
        </Container>
      </Box>

      {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
      <Box
        sx={{
          py: 8,
          backgroundColor: 'primary.main',
          color: 'white',
          textAlign: 'center',
        }}
      >
        <Container maxWidth="md">
          <Typography
            variant="h4"
            component="h2"
            gutterBottom
            sx={{ fontWeight: 600, mb: 3 }}
          >
            –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É?
          </Typography>
          <Typography
            variant="h6"
            sx={{ mb: 4, opacity: 0.9 }}
          >
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏
          </Typography>
          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>
            {!isAuthenticated && (
              <>
                <Button
                  variant="contained"
                  size="large"
                  onClick={() => navigate('/register')}
                  sx={{
                    backgroundColor: 'white',
                    color: 'primary.main',
                    px: 4,
                    py: 1.5,
                    '&:hover': {
                      backgroundColor: 'grey.100',
                    },
                  }}
                >
                  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </Button>
                <Button
                  variant="outlined"
                  size="large"
                  onClick={() => navigate('/login')}
                  sx={{
                    borderColor: 'white',
                    color: 'white',
                    px: 4,
                    py: 1.5,
                    '&:hover': {
                      borderColor: 'white',
                      backgroundColor: 'rgba(255,255,255,0.1)',
                    },
                  }}
                >
                  –í–æ–π—Ç–∏
                </Button>
              </>
            )}
            {isAuthenticated && (
              <Button
                variant="contained"
                size="large"
                onClick={() => navigate('/trainer')}
                sx={{
                  backgroundColor: 'white',
                  color: 'primary.main',
                  px: 4,
                  py: 1.5,
                  '&:hover': {
                    backgroundColor: 'grey.100',
                  },
                }}
              >
                –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
              </Button>
            )}
          </Box>
        </Container>
      </Box>
    </Box>
  );
};

export default HomePage; 